#================================================================================
# Example for a local .env file. Use the following environment
# variables to configure the server.
#================================================================================

#--------------------------------------------------------------------------------
# General server settings:
#  - ELISA_LISTEN_IP:   Network interface to listen on (usually 127.0.0.1 or 0.0.0.0)
#  - ELISA_LISTEN_PORT: Port number to listen on
#  - ELISA_HOT_RELOAD:  Restart server on code changes (for development only)
#--------------------------------------------------------------------------------
ELISA_LISTEN_IP   = 127.0.0.1
ELISA_LISTEN_PORT = 8000
ELISA_HOT_RELOAD  = false

#--------------------------------------------------------------------------------
# Database
#  - ELISA_MONGODB_URL: Mongo connection URL
#--------------------------------------------------------------------------------
ELISA_MONGODB_URL = mongodb://username:password@localhost:27017/?compressors=zstandard,zlib,snappy

#--------------------------------------------------------------------------------
# Language Model
#  - ELISA_LLM_CHAT_MODEL:  Name of the used chat model
#  - ELISA_LLM_API_KEY:     API key to authenticate at the LLM API
#  - ELISA_LLM_BASE_URL:    Base URL of the LLM API
#  - ELISA_LLM_CUSTOM_INIT: Python module with custom setup of the LLM client
#
# Note: The default implementation assumes an OpenAI compatible API, that can be
# called via the OpenAI Python SDK. In order to use different providers, you can
# create a file called `_local/__init__.py` with the following content (example
# for LiteLLM):
#
#   from litellm import completion
#   client = instructor.from_litellm(completion)
#
# See https://python.useinstructor.com/integrations/ for more examples. Make sure
# to initialize an Instructor client object named "client".
#--------------------------------------------------------------------------------
ELISA_LLM_CHAT_MODEL  = gpt-4.1
ELISA_LLM_API_KEY     = sk-...
#ELISA_LLM_BASE_URL   = ...

#--------------------------------------------------------------------------------
# OpenID Connect Identity Provider
#  - ELISA_OIDC_JWKS_URL:   JWKS URL of the identity provider (optional)
#  - ELISA_OIDC_PUBLIC_KEY: Public key for JWT decoding, instead of JWKS URL
#  - ELISA_OIDC_ALGORITHMS: Supported JWT signature algorithms
#  - ELISA_OIDC_REQUIRE:    Required claims in the JWT access token (comma separated)
#  - ELISA_OIDC_CLIENT_ID:  Client ID of the server application
#  - ELISA_OIDC_ISSUER:     Expected token issuer
#
# Fallback values for development and demonstration without proper IdP. This sets
# a dummy user with fixed scopes (authorizations) that is always logged-in.
#
#  - ELISA_AUTH_SUBJECT: Dummy user name
#  - ELISA_AUTH_SCOPES:  Fixed scopes for the dummy user (comma separated)
#--------------------------------------------------------------------------------
ELISA_OIDC_JWKS_URL    = ...
#ELISA_OIDC_PUBLIC_KEY = ...
#ELISA_OIDC_ALGORITHMS = RS256
#ELISA_OIDC_REQUIRE    = aud, exp, scope
ELISA_OIDC_CLIENT_ID   = ...
ELISA_OIDC_ISSUER      = ...

#ELISA_AUTH_SUBJECT    = ...
#ELISA_AUTH_SCOPES     = chat_history