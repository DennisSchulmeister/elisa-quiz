/*
 * Elisa: AI Learning Quiz
 * Â© 2025 Dennis Schulmeister-Zimolong <dennis@wpvs.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 */

import type { Writable } from "svelte/store";
import { writable }      from "svelte/store";

/**
 * Game state managed by the store
 */
export type QuizGame = {
    subject:           string;
    level:             string;
    running:           boolean;
    currentQuestion:   Question;
    nextQuestions:     Question[];
    previousQuestions: Question[];
    correctAnswers:    number;
}

/**
 * Updated game state as received from backend
 */
export type InboundQuizMessageData = {
    subject?:   string,
    level?:     string,
    questions?: Question[],
}

/**
 * A single quiz question generated by the LLM
 */
export type Question = {
    question?: string,
    answers?:  string[],
    correct?:  number, 
}

/**
 * A singleton store object with the quiz game state. The store content contains the
 * state to be rendered by the UI. The object contains methods to mutate the state.
 */
class QuizStore {
    /**
     * Sevelte store which holds the game state
     */
    private store: Writable<QuizGame> = writable({
        subject:           "",
        level:             "",
        running:           false,
        currentQuestion:   {},
        nextQuestions:     [],
        previousQuestions: [],
        correctAnswers:    0,
    });

    subscribe = this.store.subscribe;

    /**
     * Interpret JSON data generated by the LLM to update the game state.
     * @param messageData - Structure quiz data
     */
    updateFromBackend(messageData: InboundQuizMessageData) {
    }

    /**
     * Update state to display the next question.
     * @paras answer - Chosen answer (-1 = skip question)
     */
    goon(answer: number) {
    }

    /**
     * Skip the remaining questions to end the quiz early.
     */
    abort() {
    }

    /**
     * Fully reset the game state, starting completely fresh.
     */
    reset() {
    }
}

export default new QuizStore();
